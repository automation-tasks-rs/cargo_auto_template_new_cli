var searchIndex = new Map(JSON.parse('[\
["cargo_auto_template_new_cli",{"doc":"src/bin/cargo_auto_template_new_cli/main.rs","t":"HHHH","n":["main","print_greet_name","print_help","upper_greet_name"],"q":[[0,"cargo_auto_template_new_cli"],[4,"anyhow"]],"d":["entry point into the bin-executable","print my name","print help","print my name upper, can return error"],"i":[0,0,0,0],"f":"{{}b}{db}1{d{{f{b}}}}","c":[],"p":[[1,"unit"],[1,"str"],[8,"Result",4]],"b":[]}],\
["cargo_auto_template_new_cli_lib",{"doc":"cargo_auto_template_new_cli","t":"SGSSPPSNNNNHHNCNNNNNHHH","n":["GREEN","LibraryError","RED","RESET","Unknown","Uppercase","YELLOW","borrow","borrow_mut","fmt","fmt","format_hello_phrase","format_upper_hello_phrase","from","hello_mod","into","to_string","try_from","try_into","type_id","format_hello_phrase","format_upper_hello_phrase","make_uppercase"],"q":[[0,"cargo_auto_template_new_cli_lib"],[20,"cargo_auto_template_new_cli_lib::hello_mod"],[23,"core::fmt"],[24,"core::fmt"],[25,"core::result"],[26,"core::any"]],"d":["","all possible library errors for <code>thiserror</code>","","","","","","","","","","format the hello phrase","format the hello phrase with uppercase name if it is …","Returns the argument unchanged.","All the real code is inside modules in separate files.","Calls <code>U::from(self)</code>.","","","","","format the hello phrase","format the hello phrase with uppercase name if it is …","return uppercase"],"i":[0,0,0,0,1,1,0,1,1,1,1,0,0,1,0,1,1,1,1,1,0,0,0],"f":"```````{ce{}{}}0{{bd}f}0{hj}{h{{l{jb}}}}{cc{}}`4{cj{}}{c{{l{e}}}{}{}}0{cn{}}545","c":[],"p":[[6,"LibraryError",0],[5,"Formatter",23],[8,"Result",23],[1,"str"],[5,"String",24],[6,"Result",25],[5,"TypeId",26]],"b":[[9,"impl-Debug-for-LibraryError"],[10,"impl-Display-for-LibraryError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
